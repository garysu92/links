{"ast":null,"code":"import _toConsumableArray from\"/Users/garysu/Github/links/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/Users/garysu/Github/links/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import UrlForm from'./components/UrlForm';import UrlList from'./components/UrlList';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=function App(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),urls=_useState2[0],setUrls=_useState2[1];useEffect(function(){fetch('/api/urls').then(function(response){return response.json();}).then(function(data){return setUrls(data);}).catch(function(error){return console.error('Error fetching URLs:',error);});},[]);var addUrl=function addUrl(newUrl){fetch('/api/urls',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(newUrl)}).then(function(response){return response.json();}).then(function(data){setUrls([].concat(_toConsumableArray(urls),[data]));}).catch(function(error){return console.error('Error adding URL:',error);});};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"URL Entry App\"}),/*#__PURE__*/_jsx(UrlForm,{addUrl:addUrl}),/*#__PURE__*/_jsx(UrlList,{urls:urls})]});};export default App;","map":{"version":3,"names":["React","useState","useEffect","UrlForm","UrlList","jsx","_jsx","jsxs","_jsxs","App","_useState","_useState2","_slicedToArray","urls","setUrls","fetch","then","response","json","data","catch","error","console","addUrl","newUrl","method","headers","body","JSON","stringify","concat","_toConsumableArray","children"],"sources":["/Users/garysu/Github/links/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport UrlForm from './components/UrlForm';\nimport UrlList from './components/UrlList';\n\nconst App = () => {\n  const [urls, setUrls] = useState([]);\n\n  useEffect(() => {\n    fetch('/api/urls')\n      .then((response) => response.json())\n      .then((data) => setUrls(data))\n      .catch((error) => console.error('Error fetching URLs:', error));\n  }, []);\n\n  const addUrl = (newUrl) => {\n    fetch('/api/urls', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(newUrl),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        setUrls([...urls, data]);\n      })\n      .catch((error) => console.error('Error adding URL:', error));\n  };\n\n  return (\n    <div>\n      <h1>URL Entry App</h1>\n      <UrlForm addUrl={addUrl} />\n      <UrlList urls={urls} />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"0PAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,OAAO,KAAM,sBAAsB,CAC1C,MAAO,CAAAC,OAAO,KAAM,sBAAsB,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE3C,GAAM,CAAAC,GAAG,CAAG,QAAN,CAAAA,GAAGA,CAAA,CAAS,CAChB,IAAAC,SAAA,CAAwBT,QAAQ,CAAC,EAAE,CAAC,CAAAU,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAA7BG,IAAI,CAAAF,UAAA,IAAEG,OAAO,CAAAH,UAAA,IAEpBT,SAAS,CAAC,UAAM,CACda,KAAK,CAAC,WAAW,CAAC,CACfC,IAAI,CAAC,SAACC,QAAQ,QAAK,CAAAA,QAAQ,CAACC,IAAI,CAAC,CAAC,GAAC,CACnCF,IAAI,CAAC,SAACG,IAAI,QAAK,CAAAL,OAAO,CAACK,IAAI,CAAC,GAAC,CAC7BC,KAAK,CAAC,SAACC,KAAK,QAAK,CAAAC,OAAO,CAACD,KAAK,CAAC,sBAAsB,CAAEA,KAAK,CAAC,GAAC,CACnE,CAAC,CAAE,EAAE,CAAC,CAEN,GAAM,CAAAE,MAAM,CAAG,QAAT,CAAAA,MAAMA,CAAIC,MAAM,CAAK,CACzBT,KAAK,CAAC,WAAW,CAAE,CACjBU,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACL,MAAM,CAC7B,CAAC,CAAC,CACCR,IAAI,CAAC,SAACC,QAAQ,QAAK,CAAAA,QAAQ,CAACC,IAAI,CAAC,CAAC,GAAC,CACnCF,IAAI,CAAC,SAACG,IAAI,CAAK,CACdL,OAAO,IAAAgB,MAAA,CAAAC,kBAAA,CAAKlB,IAAI,GAAEM,IAAI,EAAC,CAAC,CAC1B,CAAC,CAAC,CACDC,KAAK,CAAC,SAACC,KAAK,QAAK,CAAAC,OAAO,CAACD,KAAK,CAAC,mBAAmB,CAAEA,KAAK,CAAC,GAAC,CAChE,CAAC,CAED,mBACEb,KAAA,QAAAwB,QAAA,eACE1B,IAAA,OAAA0B,QAAA,CAAI,eAAa,CAAI,CAAC,cACtB1B,IAAA,CAACH,OAAO,EAACoB,MAAM,CAAEA,MAAO,CAAE,CAAC,cAC3BjB,IAAA,CAACF,OAAO,EAACS,IAAI,CAAEA,IAAK,CAAE,CAAC,EACpB,CAAC,CAEV,CAAC,CAED,cAAe,CAAAJ,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}