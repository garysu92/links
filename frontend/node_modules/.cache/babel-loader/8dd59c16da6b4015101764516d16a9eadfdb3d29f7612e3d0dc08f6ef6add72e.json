{"ast":null,"code":"const express = require('express');\nconst router = express.Router();\nconst URL = require('../models/Url');\n\n// GET all URLs\nrouter.get('/', async (req, res) => {\n  try {\n    const urls = await URL.find();\n    // Map through the URLs and add the full URL with the protocol to each item\n    const urlsWithFullUrl = urls.map(url => ({\n      _id: url._id,\n      name: url.name,\n      url: url.url.startsWith('http') ? url.url : `http://${url.url}`\n    }));\n    res.json(urlsWithFullUrl);\n  } catch (error) {\n    res.status(500).json({\n      message: 'Error fetching URLs'\n    });\n  }\n});\n\n// POST a new URL\nrouter.post('/', async (req, res) => {\n  const {\n    name,\n    url\n  } = req.body;\n  try {\n    const newUrl = new URL({\n      name,\n      url\n    });\n    await newUrl.save();\n    res.status(201).json(newUrl);\n  } catch (error) {\n    res.status(500).json({\n      message: 'Error adding URL'\n    });\n  }\n});\nmodule.exports = router;","map":{"version":3,"names":["express","require","router","Router","URL","get","req","res","urls","find","urlsWithFullUrl","map","url","_id","name","startsWith","json","error","status","message","post","body","newUrl","save","module","exports"],"sources":["/Users/garysu/Github/links/frontend/src/components/UrlList.js"],"sourcesContent":["const express = require('express');\nconst router = express.Router();\nconst URL = require('../models/Url');\n\n// GET all URLs\nrouter.get('/', async (req, res) => {\n  try {\n    const urls = await URL.find();\n    // Map through the URLs and add the full URL with the protocol to each item\n    const urlsWithFullUrl = urls.map((url) => ({\n      _id: url._id,\n      name: url.name,\n      url: url.url.startsWith('http') ? url.url : `http://${url.url}`,\n    }));\n    res.json(urlsWithFullUrl);\n  } catch (error) {\n    res.status(500).json({ message: 'Error fetching URLs' });\n  }\n});\n\n// POST a new URL\nrouter.post('/', async (req, res) => {\n  const { name, url } = req.body;\n\n  try {\n    const newUrl = new URL({ name, url });\n    await newUrl.save();\n    res.status(201).json(newUrl);\n  } catch (error) {\n    res.status(500).json({ message: 'Error adding URL' });\n  }\n});\n\nmodule.exports = router;\n"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMC,MAAM,GAAGF,OAAO,CAACG,MAAM,CAAC,CAAC;AAC/B,MAAMC,GAAG,GAAGH,OAAO,CAAC,eAAe,CAAC;;AAEpC;AACAC,MAAM,CAACG,GAAG,CAAC,GAAG,EAAE,OAAOC,GAAG,EAAEC,GAAG,KAAK;EAClC,IAAI;IACF,MAAMC,IAAI,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,CAAC;IAC7B;IACA,MAAMC,eAAe,GAAGF,IAAI,CAACG,GAAG,CAAEC,GAAG,KAAM;MACzCC,GAAG,EAAED,GAAG,CAACC,GAAG;MACZC,IAAI,EAAEF,GAAG,CAACE,IAAI;MACdF,GAAG,EAAEA,GAAG,CAACA,GAAG,CAACG,UAAU,CAAC,MAAM,CAAC,GAAGH,GAAG,CAACA,GAAG,GAAI,UAASA,GAAG,CAACA,GAAI;IAChE,CAAC,CAAC,CAAC;IACHL,GAAG,CAACS,IAAI,CAACN,eAAe,CAAC;EAC3B,CAAC,CAAC,OAAOO,KAAK,EAAE;IACdV,GAAG,CAACW,MAAM,CAAC,GAAG,CAAC,CAACF,IAAI,CAAC;MAAEG,OAAO,EAAE;IAAsB,CAAC,CAAC;EAC1D;AACF,CAAC,CAAC;;AAEF;AACAjB,MAAM,CAACkB,IAAI,CAAC,GAAG,EAAE,OAAOd,GAAG,EAAEC,GAAG,KAAK;EACnC,MAAM;IAAEO,IAAI;IAAEF;EAAI,CAAC,GAAGN,GAAG,CAACe,IAAI;EAE9B,IAAI;IACF,MAAMC,MAAM,GAAG,IAAIlB,GAAG,CAAC;MAAEU,IAAI;MAAEF;IAAI,CAAC,CAAC;IACrC,MAAMU,MAAM,CAACC,IAAI,CAAC,CAAC;IACnBhB,GAAG,CAACW,MAAM,CAAC,GAAG,CAAC,CAACF,IAAI,CAACM,MAAM,CAAC;EAC9B,CAAC,CAAC,OAAOL,KAAK,EAAE;IACdV,GAAG,CAACW,MAAM,CAAC,GAAG,CAAC,CAACF,IAAI,CAAC;MAAEG,OAAO,EAAE;IAAmB,CAAC,CAAC;EACvD;AACF,CAAC,CAAC;AAEFK,MAAM,CAACC,OAAO,GAAGvB,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}